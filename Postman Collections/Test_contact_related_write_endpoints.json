{
	"info": {
		"_postman_id": "4c1f2732-5552-4f0a-bd8f-0103e18f235e",
		"name": "Test contact related write endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Get Subaccount",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Found subaccount\", function () {\r",
							"    const subaccount = pm.response.json().value[0];\r",
							"    pm.expect(subaccount.HasExpired).to.be.false;\r",
							"});\r",
							"\r",
							"var uniqueId = new Date().getTime() * 10000;\r",
							"pm.collectionVariables.set(\"uniqueId\", uniqueId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "202599fc-c206-4dcd-b301-6d195496b16f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/Subaccounts?$filter=ID eq {{subaccountId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Subaccounts"
					],
					"query": [
						{
							"key": "$filter",
							"value": "ID eq {{subaccountId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get custom field \"MyCustomField\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var customField = pm.response.json().value;\r",
							"\r",
							"if (customField.length == 1) {\r",
							"    console.log(customField[0]);\r",
							"    pm.collectionVariables.set(\"contactFieldMappingId\", customField[0].ID);\r",
							"    pm.collectionVariables.set(\"customFieldDisplayName\", customField[0].DisplayName);\r",
							"    postman.setNextRequest(\"Get subaccount custom field mapping for \\\"MyCustomField\\\"\");\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "32f4ae86-b8f6-4400-be69-ba1ba2d9e468",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/ContactFieldMappings/?$filter=DisplayName eq 'MyCustomField' and ContactFieldDataTypeID eq 6",
					"host": [
						"{{host}}"
					],
					"path": [
						"ContactFieldMappings",
						""
					],
					"query": [
						{
							"key": "$filter",
							"value": "DisplayName eq 'MyCustomField' and ContactFieldDataTypeID eq 6"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create custom field \"MyCustomField\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Custom field saved\", function () {\r",
							"\tconst customfield = pm.response.json();\r",
							"    pm.expect(customfield.id).is.greaterThan(0);\r",
							"});\r",
							"\r",
							"const customfield = JSON.parse(pm.request.body.raw);\r",
							"pm.collectionVariables.set(\"contactFieldMappingId\", pm.response.json().id);\r",
							"pm.collectionVariables.set(\"customFieldDisplayName\", customField.DisplayName);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0e598ef6-f821-4339-866e-c6a3286e190b",
						"exec": [
							"/*\r",
							"pm.sendRequest({\r",
							"    url:  pm.environment.get(\"host\")+\"/SubaccountContactFieldMappings?$filter=DisplayName eq 'MyCustomField'\", \r",
							"      method: 'GET',\r",
							"      header: {\r",
							"        'Accept': 'application/json',\r",
							"        'Content-Type': 'application/json',\r",
							"        'Authorization': 'Token ' + pm.environment.get(\"ApiKey\")\r",
							"    },\r",
							"}, function (err, res) {\r",
							"    pm.expect(err).to.not.be.ok;\r",
							"    pm.expect(res).to.have.property('code', 200);\r",
							"    pm.expect(res).to.have.property('status', 'OK');\r",
							"    const fieldMapping = res.json();\r",
							"    if (fieldMapping.value.length > 0)\r",
							"    {\r",
							"        console.log(fieldMapping.value.length);\r",
							"        postman.setNextRequest(\"Save Source: \\\"Postman\\\"\");\r",
							"    }\r",
							"});\r",
							"*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "3e34b21e-6437-4a5f-80f6-935c4de7dc14",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"DisplayName\":\"MyCustomField\",\r\n    \"FieldLength\": 50,\r\n    \"DecimalPlaces\": null,\r\n    \"ContactFieldDataTypeID\": 6,\r\n    \"PicklistID\": null\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/ContactFieldMappings/Create"
			},
			"response": []
		},
		{
			"name": "Get subaccount custom field mapping for \"MyCustomField\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var customField = pm.response.json().value;\r",
							"\r",
							"if (customField.length == 1) {\r",
							"    console.log(customField[0]);\r",
							"    pm.collectionVariables.set(\"customFieldDisplayName\", customField[0].DisplayName);\r",
							"    postman.setNextRequest(\"Save Source: \\\"Postman\\\"\");\r",
							"}\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "9b3ac551-d0cf-43d2-bee0-dde6c3cf892d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/SubaccountContactFieldMappings/?$filter=SubaccountID eq {{subaccountId}} and DisplayName eq 'MyCustomField'",
					"host": [
						"{{host}}"
					],
					"path": [
						"SubaccountContactFieldMappings",
						""
					],
					"query": [
						{
							"key": "$filter",
							"value": "SubaccountID eq {{subaccountId}} and DisplayName eq 'MyCustomField'"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create subaccount mapping for custom field \"MyCustomField\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Custom field subaccount mapping applied\", function () {\r",
							"\tconst mapping = pm.response.json();\r",
							"    console.log(mapping);\r",
							"    pm.expect(mapping.id).is.greaterThan(0);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "0e598ef6-f821-4339-866e-c6a3286e190b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "9db728b6-93fc-4272-a766-b40b4a40e014",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"SubaccountID\": {{subaccountId}},\r\n    \"ContactFieldMappingID\": {{contactFieldMappingId}}\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/SubaccountContactFieldMappings/Map"
			},
			"response": []
		},
		{
			"name": "Save Source: \"Postman\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Source saved\", function () {\r",
							"\tconst source = pm.response.json();\r",
							"    pm.expect(source.id).is.greaterThan(0);\r",
							"});\r",
							"\r",
							"const source = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"sourceId\", source.id);\r",
							"\r",
							"console.log(source);"
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "97e120a6-d142-4273-b561-89f3ec5fe742",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"SubaccountID\":{{subaccountId}},\r\n    \"Name\":\"Postman\"\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/Sources"
			},
			"response": []
		},
		{
			"name": "Save Group: \"Postman (1)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Group saved\", function () {\r",
							"\tconst group = pm.response.json();\r",
							"    pm.expect(group.ID).is.greaterThan(0);\r",
							"});\r",
							"\r",
							"const group = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"group1Id\", group.ID);\r",
							"pm.collectionVariables.set(\"group1Name\", group.Name);\r",
							"\r",
							"console.log(group);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "42575628-e680-4725-9f18-079e8210fe9a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"SubaccountID\":{{subaccountId}},\r\n    \"Name\":\"Postman (1)\",\r\n    \"IsFeaturedGroup\": true\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/Groups"
			},
			"response": []
		},
		{
			"name": "Save Group: \"Postman (2)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Group saved\", function () {\r",
							"\tconst group = pm.response.json();\r",
							"    pm.expect(group.ID).is.greaterThan(0);\r",
							"});\r",
							"\r",
							"const group = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"group2Id\", group.ID);\r",
							"pm.collectionVariables.set(\"group2Name\", group.Name);\r",
							"\r",
							"console.log(group);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "b37b7686-da42-41fc-abbd-a3e6ed67b552",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"SubaccountID\":{{subaccountId}},\r\n    \"Name\":\"Postman (2)\",\r\n    \"IsFeaturedGroup\": true\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/Groups"
			},
			"response": []
		},
		{
			"name": "Save contact to \"Postman (1)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8afefddd-cf68-4340-b6bd-6884d559ca28",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contact saved\", function () {\r",
							"\tconst contact = pm.response.json();\r",
							"    pm.expect(contact.id).is.greaterThan(0);\r",
							"});\r",
							"\r",
							"const contact = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"console.log(contact);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "24806c8a-8ee1-4c24-9736-d87929840729",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"SubaccountID\": {{subaccountId}},\r\n    \"SourceID\": {{sourceId}},\r\n    \"GroupIDs\": [{{group1Id}}],\r\n    \"Email\": \"postman.{{uniqueId}}@automatedtesting.forfront.net\",\r\n    \"Firstname\": \"Post\",\r\n    \"Lastname\": \"Man\",\r\n    \"CustomFields\": [\r\n        { \r\n            \"DisplayName\": \"{{customFieldDisplayName}}\", \r\n            \"FieldValue\": \"postman.{{uniqueId}}\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/Contacts"
			},
			"response": []
		},
		{
			"name": "Get saved contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Found saved contact\", function() {\r",
							"    var contacts = pm.response.json();\r",
							"    pm.expect(contacts.length == 1).to.be.true;\r",
							"    var contact = contacts[0];\r",
							"    pm.expect(contact.MyCustomField == \"postman.\" + pm.collectionVariables.get(\"uniqueId\")).to.be.true;\r",
							"    console.log(contact);\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "4b4a979f-f282-4cda-a058-68a2a5adc973",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/Contacts/Export/?$filter=Email eq 'postman.{{uniqueId}}@automatedtesting.forfront.net'&$select=ID,Email,{{customFieldDisplayName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Contacts",
						"Export",
						""
					],
					"query": [
						{
							"key": "$filter",
							"value": "Email eq 'postman.{{uniqueId}}@automatedtesting.forfront.net'"
						},
						{
							"key": "$select",
							"value": "ID,Email,{{customFieldDisplayName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Save contact import template",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8afefddd-cf68-4340-b6bd-6884d559ca28",
						"exec": [
							"pm.collectionVariables.unset(\"uniqueId\");\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contact Import Template saved\", function () {\r",
							"\tconst template = pm.response.json();\r",
							"    pm.expect(template.id).is.greaterThan(0);\r",
							"});\r",
							"\r",
							"const template = pm.response.json();\r",
							"pm.collectionVariables.set(\"contactImportTemplateId\", template.id);\r",
							"console.log(template);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "486884b3-80e9-429a-844f-cc4ff4919866",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"SubaccountID\": {{subaccountId}},\r\n    \"SourceID\": {{sourceId}},\r\n    \"GroupID\": {{group2Id}},\r\n    \"ImportActionType\": \"Repopulate\",\r\n    \"Name\": \"Postman\"\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/ContactImportTemplates"
			},
			"response": []
		},
		{
			"name": "Import contacts from file using import template to \"Postman (2)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8afefddd-cf68-4340-b6bd-6884d559ca28",
						"exec": [
							"pm.collectionVariables.unset(\"uniqueId\");\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contact Import Template saved\", function () {\r",
							"\tconst template = pm.response.json();\r",
							"    console.log(template);\r",
							"    pm.expect(template.Token).has.length.greaterThan(0);\r",
							"    pm.collectionVariables.set(\"importToken\", template.Token);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"importStatusRetryCheckCount\", 0);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "474c4609-5549-4371-ad79-73271d176023",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "file",
					"file": {
						"src": "data/eshot.import.example.csv"
					},
					"options": {
						"file": {}
					}
				},
				"url": "{{host}}/ContactImports/TemplatedUpload({{contactImportTemplateId}})"
			},
			"response": []
		},
		{
			"name": "Wait for file import to complete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contact import error check\", function () {\r",
							"    const  contactImports = pm.response.json().value;\r",
							"    pm.expect(contactImports.length == 1).to.be.true;\r",
							"    console.log(contactImports[0]);\r",
							"    pm.expect(contactImports[0].ImportStatusID == 2).to.be.false;\r",
							"});\r",
							"\r",
							"pm.test(\"Contact import retry limit check\", function () {\r",
							"    var counter = pm.collectionVariables.get(\"importStatusRetryCheckCount\");\r",
							"    pm.expect(counter < 5).to.be.true;\r",
							"});\r",
							"\r",
							"const contactImports = pm.response.json().value;\r",
							"const status = contactImports[0].ImportStatusID;\r",
							"let counter = pm.collectionVariables.get(\"importStatusRetryCheckCount\");\r",
							"\r",
							"if (status !== 2 && status !== 3 && counter < 5)\r",
							"{\r",
							"    setTimeout(function(){\r",
							"        console.log(\"Sleeping for 3 seconds before retry\");\r",
							"    }, 3000);\r",
							"    pm.collectionVariables.set(\"importStatusRetryCheckCount\", counter+1);\r",
							"    postman.setNextRequest(\"Wait for file import to complete\"); // re-run the current request\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "ce4052d4-4631-47d1-a0d5-576227cb5568",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/ContactImports/?$filter=Token eq '{{importToken}}'",
					"host": [
						"{{host}}"
					],
					"path": [
						"ContactImports",
						""
					],
					"query": [
						{
							"key": "$filter",
							"value": "Token eq '{{importToken}}'"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update all contacts in group \"Postman (1)\" to have \"MyCustomField\" value of \"postman test\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8afefddd-cf68-4340-b6bd-6884d559ca28",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"const contact = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"console.log(contact);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "0164e482-8bb2-4abb-bfa8-76b03b09d527",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"SubaccountID\": {{subaccountId}},\r\n    \"CustomFields\": [\r\n        { \r\n            \"DisplayName\": \"{{customFieldDisplayName}}\", \r\n            \"FieldValue\": \"postman test\", \r\n            \"TextOperation\": \"ReplaceContent\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/Groups({{group1Id}})/Contacts/Update"
			},
			"response": []
		},
		{
			"name": "Get contacts in group \"Postman (1)\" with \"MyCustomField\" value of \"postman test\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Found saved contacts with matching custom field value\", function() {\r",
							"    var contacts = pm.response.json();\r",
							"    pm.expect(contacts.length > 0).to.be.true;\r",
							"    \r",
							"    for (var i = 0; i < contacts.length; i++)\r",
							"    {\r",
							"        var contact = contacts[i];\r",
							"        pm.expect(contact.MyCustomField == \"postman test\").to.be.true;\r",
							"    }\r",
							"\r",
							"    console.log(contacts[0]);\r",
							"    pm.collectionVariables.set(\"contactId\", contacts[0].ID);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "b03e81e8-62e4-4c6a-a284-893c0f827601",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/Contacts/Export/?$filter=MyCustomField eq 'postman test' and Groups/any(g:g/ID eq '{{group1Id}}')&$select=ID,Email,{{customFieldDisplayName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Contacts",
						"Export",
						""
					],
					"query": [
						{
							"key": "$filter",
							"value": "MyCustomField eq 'postman test' and Groups/any(g:g/ID eq '{{group1Id}}')"
						},
						{
							"key": "$select",
							"value": "ID,Email,{{customFieldDisplayName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contacts in group \"Postman (1)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contacts exist in group\", function () {\r",
							"    const count = pm.response.json().length;\r",
							"    pm.expect(count > 0).to.be.true;\r",
							"});\r",
							"\r",
							"const contacts = pm.response.json();\r",
							"\r",
							"console.log(\"Group \" + pm.collectionVariables.get(\"group1Name\") + \": Contact count (\" + contacts.length + \")\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "55b9c45e-fe95-462e-b141-23fcfe96bdc7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/Contacts/Export?$filter=Groups/any(g:g/ID eq {{group1Id}})&$select=ID,Email,Firstname,Lastname,{{customFieldDisplayName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Contacts",
						"Export"
					],
					"query": [
						{
							"key": "$filter",
							"value": "Groups/any(g:g/ID eq {{group1Id}})"
						},
						{
							"key": "$select",
							"value": "ID,Email,Firstname,Lastname,{{customFieldDisplayName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get contacts in group \"Postman (2)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contacts exist in group\", function () {\r",
							"    const count = pm.response.json().length;\r",
							"    pm.expect(count > 0).to.be.true;\r",
							"});\r",
							"\r",
							"const contacts = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"group2ContactCount\", contacts.length);\r",
							"\r",
							"console.log(\"Group \" + pm.collectionVariables.get(\"group2Name\") + \": Contact count (\" + contacts.length + \")\");\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "6346e64c-ca65-4437-8963-273aa487a609",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/Contacts/Export?$filter=Groups/any(g:g/ID eq {{group2Id}})&$select=ID,Email,Firstname,Lastname,{{customFieldDisplayName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Contacts",
						"Export"
					],
					"query": [
						{
							"key": "$filter",
							"value": "Groups/any(g:g/ID eq {{group2Id}})"
						},
						{
							"key": "$select",
							"value": "ID,Email,Firstname,Lastname,{{customFieldDisplayName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add contacts only present in group: \"Postman (1)\" to \"Postman (2)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8afefddd-cf68-4340-b6bd-6884d559ca28",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "ede5c9c6-9e6a-4b92-9553-b852d65629c4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"@odata.id\":\"{{host}}/Groups({{group2Id}})\"\r\n}",
					"options": {
						"raw": {}
					}
				},
				"url": "{{host}}/Contacts({{contactId}})/Groups/$ref"
			},
			"response": []
		},
		{
			"name": "Check contacts in group \"Postman (2)\" has newly added member",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contact has been added to the group\", function () {\r",
							"    const count = pm.response.json().length;\r",
							"    const comparisonCount = pm.collectionVariables.get(\"group2ContactCount\");\r",
							"    pm.expect(count == (comparisonCount+1)).to.be.true;\r",
							"});\r",
							"\r",
							"const contacts = pm.response.json();\r",
							"\r",
							"console.log(\"Group \" + pm.collectionVariables.get(\"group2Name\") + \": Contact count (\" + contacts.length + \")\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "93d246e6-9201-471a-93f1-bd9f733eb38b",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/Contacts/Export?$filter=Groups/any(g:g/ID eq {{group2Id}})&$select=ID,Email,Firstname,Lastname,{{customFieldDisplayName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Contacts",
						"Export"
					],
					"query": [
						{
							"key": "$filter",
							"value": "Groups/any(g:g/ID eq {{group2Id}})"
						},
						{
							"key": "$select",
							"value": "ID,Email,Firstname,Lastname,{{customFieldDisplayName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove contact from group: \"Postman (2)\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8afefddd-cf68-4340-b6bd-6884d559ca28",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "f1cc6687-76ba-4cbd-9a6d-24515a7a0721",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {}
					}
				},
				"url": {
					"raw": "{{host}}/Contacts({{contactId}})/Groups/$ref?$id={{group2Id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Contacts({{contactId}})",
						"Groups",
						"$ref"
					],
					"query": [
						{
							"key": "$id",
							"value": "{{group2Id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check contacts in group \"Postman (2)\" no longer has removed contact",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de527bc7-6999-455a-b1e4-d08ce769fb55",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Contact has been removed from the group\", function () {\r",
							"    const count = pm.response.json().length;\r",
							"    const comparisonCount = pm.collectionVariables.get(\"group2ContactCount\");\r",
							"    pm.expect(count == comparisonCount).to.be.true;\r",
							"});\r",
							"\r",
							"const contacts = pm.response.json();\r",
							"\r",
							"console.log(\"Group \" + pm.collectionVariables.get(\"group2Name\") + \": Contact count (\" + contacts.length + \")\");\r",
							"\r",
							"pm.collectionVariables.unset(\"importStatusRetryCheckCount\");\r",
							"pm.collectionVariables.unset(\"importToken\");\r",
							"pm.collectionVariables.unset(\"group1Id\");\r",
							"pm.collectionVariables.unset(\"group1Name\");\r",
							"pm.collectionVariables.unset(\"group2Id\");\r",
							"pm.collectionVariables.unset(\"group2Name\");\r",
							"pm.collectionVariables.unset(\"group2ContactCount\");\r",
							"pm.collectionVariables.unset(\"contactId\");\r",
							"pm.collectionVariables.unset(\"contactImportTemplateId\");\r",
							"pm.collectionVariables.unset(\"customFieldDisplayName\");\r",
							"pm.collectionVariables.unset(\"uniqueId\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"_postman_id": "a8b3bf7b-5b1e-41f2-a00b-139f1e74e267",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Token {{ApiKey}}",
						"description": "Authorization token",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/Contacts/Export?$filter=Groups/any(g:g/ID eq {{group2Id}})&$select=ID,Email,Firstname,Lastname,{{customFieldDisplayName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"Contacts",
						"Export"
					],
					"query": [
						{
							"key": "$filter",
							"value": "Groups/any(g:g/ID eq {{group2Id}})"
						},
						{
							"key": "$select",
							"value": "ID,Email,Firstname,Lastname,{{customFieldDisplayName}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "f98c14a3-ab8d-4583-a408-198f64967bc2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f8e97dc3-0eeb-4b23-8aa3-8f875af5ded5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "cf429a06-83c7-46b8-8733-36f6edf45ffa",
			"key": "subaccountId",
			"value": "5",
			"type": "string"
		},
		{
			"id": "bfb7c242-86b8-482f-96d5-a6821306495f",
			"key": "contactFieldMappingId",
			"value": "",
			"type": "string"
		},
		{
			"id": "6e2108f9-9f52-4cc3-bf47-001239e09e9a",
			"key": "sourceId",
			"value": "",
			"type": "string"
		}
	]
}